package design_pattern.creational.singleton;

/*
 * T·∫°o th·ªÉ hi·ªán c·ªßa Class Singleton trong method access. 
 * C√°ch n√†y c√≥ nh∆∞·ª£c ƒëi·ªÉm l√† kh√¥ng ho·∫°t ƒë·ªông ƒë√∫ng trong 
 * tr∆∞·ª?ng h·ª£p c√≥ nhi·ª?u thread, gi·∫£ s·ª≠ c√≥ nhi·ª?u thread c√πng 
 * l√∫c g·ª?i method getInstance() s·∫Ω c√≥ nhi·ª?u th·ªÉ hi·ªán kh√°c 
 * nhau ƒë∆∞·ª£c t·∫°o
 */
public class LazyInitializedSingleton {
	private static LazyInitializedSingleton instance;

	private LazyInitializedSingleton() {
	}

	public static LazyInitializedSingleton getInstance() {
		if (instance == null) {
			instance = new LazyInitializedSingleton();
		}
		return instance;
	}
}
